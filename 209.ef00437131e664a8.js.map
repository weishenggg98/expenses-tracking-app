{"version":3,"file":"209.ef00437131e664a8.js","mappings":"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","names":["DataTableDirective","el","vcr","renderer","this","dtOptions","prototype","ngOnInit","_this","dtTrigger","subscribe","options","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","resolvedDTOptions","Object","keys","length","$","nativeElement","setTimeout","rowCallback","row","data","index","columns","applyNgPipeTransform","applyNgRefTemplate","assign","DataTable","filter","x","ngPipeInstance","ngTemplateRef","forEach","pipe","pipeArgs","ngPipeArgs","i","findIndex","e","rowFromCol","childNodes","item","rowVal","text","rowValAfter","transform","apply","to","from","pack","arguments","ar","l","Array","slice","call","concat","__spreadArray","_a","ref","context","cellFromIndex","html","_context","userData","adtData","instance","createEmbeddedView","appendChild","rootNodes","ɵfac","i0","ɵdir","selectors","DataTablesModule","forRoot","ngModule","ɵmod","ɵinj","CommonModule","AmountType","CategoryType","ExpenseListComponent","constructor","Subject","lengthChange","ordering","searching","responsive","paging","getExpensesList","userDataJSONString","localStorage","getItem","JSON","parse","expensesList","expenseList","next","updatedUserDataJSONString","stringify","uniqueDeviceId","setItem","CURRENCY_MASK_CONFIG","InjectionToken","InputManager","htmlInputElement","setCursorAt","position","setSelectionRange","focus","createTextRange","textRange","collapse","moveEnd","moveStart","select","updateValueAndCursor","newRawValue","oldLength","selectionStart","rawValue","canInputMoreNumbers","haventReachedMaxLength","maxLength","inputSelection","selectionEnd","haveNumberSelected","value","substring","match","startWithZero","range","document","getSelection","anchorNode","firstChild","lenght","normalizedValue","replace","startRange","endRange","compareEndPoints","split","_storedRawValue","storedRawValue","InputService","inputManager","addNumber","keyCode","applyMask","keyChar","String","fromCharCode","updateFieldValue","isNumber","allowNegative","decimal","precision","prefix","suffix","thousands","onlyNumbers","Number","toFixed","integerPart","decimalPart","repeat","isZero","parseInt","indexOf","clearMask","RegExp","parseFloat","changeToNegative","charAt","changeToPositive","fixCursorPosition","forceToEndPosition","currentCursorPosition","getRawValueWithoutSuffixEndPosition","getRawValueWithoutPrefixStartPosition","removeNumber","test","updateOptions","InputHandler","inputService","handleClick","event","chromeAndroid","Math","abs","isNaN","handleCut","isReadOnly","setValue","onModelChange","handleInput","getNewKeyCode","rawValueLength","rawValueSelectionEnd","rawValueWithoutSuffixEndPosition","storedRawValueLength","setCursorPosition","handleKeydown","which","charCode","preventDefault","selectionRangeLength","handleKeypress","undefined","isArrowEndHomeKeyInFirefox","handleKeyup","handlePaste","getOnModelChange","setOnModelChange","callbackFunction","getOnModelTouched","onModelTouched","setOnModelTouched","oldString","newString","charCodeAt","readOnly","inputElement","target","CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CurrencyMaskDirective","multi","currencyMaskConfig","elementRef","keyValueDiffers","optionsTemplate","align","keyValueDiffer","find","create","ngAfterViewInit","style","textAlign","ngDoCheck","diff","inputHandler","handleBlur","isChromeAndroid","navigator","userAgent","registerOnChange","registerOnTouched","setDisabledState","disabled","validate","abstractControl","result","max","min","writeValue","ctx","NG_VALIDATORS","CurrencyMaskModule","FormsModule","routes","path","component","ExpenseDetailComponent","formBuilder","router","expenseForm","group","title","Validators","category","remark","amount","createdDateTime","amountType","onSubmit","markAllAsTouched","valid","push","navigate","redirectTo","pathMatch","ExpenseRoutingModule","RouterModule","SharedModule","MaterialModule","ReactiveFormsModule","ExpenseModule"],"sourceRoot":"webpack:///","sources":["./node_modules/angular-datatables/src/angular-datatables.directive.js","./node_modules/angular-datatables/src/angular-datatables.module.js","./src/app/enums/expense.enum.ts","./src/app/components/expense/expense-list/expense-list.component.html","./src/app/components/expense/expense-list/expense-list.component.ts","./node_modules/ng2-currency-mask/fesm2020/ng2-currency-mask.mjs","./src/app/components/expense/expense-routing.module.ts","./src/app/components/expense/expense-detail/expense-detail.component.ts","./src/app/components/expense/expense-detail/expense-detail.component.html","./src/app/modules/shared.module.ts","./src/app/components/expense/expense.module.ts"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function (options) {\n                _this.displayTable(options);\n            });\n        }\n        else {\n            this.displayTable(null);\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function (dtOptions) {\n        var _this = this;\n        // assign new options if provided\n        if (dtOptions) {\n            this.dtOptions = dtOptions;\n        }\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (resolvedDTOptions) {\n                // validate object\n                var isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', _this.el.nativeElement).length === 0;\n                if (isTableEmpty) {\n                    reject('Both the table and dtOptions cannot be empty');\n                    return;\n                }\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (resolvedDTOptions.columns) {\n                                var columns = resolvedDTOptions.columns;\n                                _this.applyNgPipeTransform(row, columns);\n                                _this.applyNgRefTemplate(row, columns, data);\n                            }\n                            // run user specified row callback if provided.\n                            if (resolvedDTOptions.rowCallback) {\n                                resolvedDTOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, resolvedDTOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.prototype.applyNgPipeTransform = function (row, columns) {\n        // Filter columns with pipe declared\n        var colsWithPipe = columns.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n        colsWithPipe.forEach(function (el) {\n            var pipe = el.ngPipeInstance;\n            var pipeArgs = el.ngPipeArgs || [];\n            // find index of column using `data` attr\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            // get <td> element which holds data using index\n            var rowFromCol = row.childNodes.item(i);\n            // Transform data with Pipe and PipeArgs\n            var rowVal = $(rowFromCol).text();\n            var rowValAfter = pipe.transform.apply(pipe, __spreadArray([rowVal], pipeArgs, false));\n            // Apply transformed string to <td>\n            $(rowFromCol).text(rowValAfter);\n        });\n    };\n    DataTableDirective.prototype.applyNgRefTemplate = function (row, columns, data) {\n        var _this = this;\n        // Filter columns using `ngTemplateRef`\n        var colsWithTemplate = columns.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n        colsWithTemplate.forEach(function (el) {\n            var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n            // get <td> element which holds data using index\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            var cellFromIndex = row.childNodes.item(i);\n            // reset cell before applying transform\n            $(cellFromIndex).html('');\n            // render onto DOM\n            // finalize context to be sent to user\n            var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                adtData: data\n            });\n            var instance = _this.vcr.createEmbeddedView(ref, _context);\n            _this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n        });\n    };\n    DataTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTableDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\n    DataTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.3\", type: DataTableDirective, selector: \"[datatable]\", inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" }, ngImport: i0 });\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[datatable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { dtOptions: [{\n                type: Input\n            }], dtTrigger: [{\n                type: Input\n            }] } });\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as i0 from \"@angular/core\";\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTablesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    DataTablesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTablesModule, declarations: [DataTableDirective], imports: [CommonModule], exports: [DataTableDirective] });\n    DataTablesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTablesModule, imports: [CommonModule] });\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: DataTablesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                }]\n        }] });\n","export enum AmountType {\r\n    Credit,\r\n    Debit,\r\n}\r\n\r\nexport enum CategoryType {\r\n    Others,\r\n    Bill,\r\n    Loan,\r\n    Shopping,\r\n}\r\n","<button mat-fab color=\"primary\" class=\"btn-add-expense\" [routerLink]=\"['detail']\">\n  <mat-icon>add</mat-icon>\n</button>\n\n<div class=\"table-responsive\">\n  <table datatable class=\"table table-hover\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Category</th>\n        <th>Debit</th>\n        <th>Credit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of expensesList\">\n        <td>{{ e.title }}</td>\n        <td [ngSwitch]=\"e.category\">\n          <span *ngSwitchCase=\"CategoryType.Others\">Others</span>\n          <span *ngSwitchCase=\"CategoryType.Loan\">Loan</span>\n          <span *ngSwitchCase=\"CategoryType.Bill\">Bill</span>\n          <span *ngSwitchCase=\"CategoryType.Shopping\">Shopping</span>\n        </td>\n        <td>\n          <span *ngIf=\"e.amountType === AmountType.Debit\">{{ e.amount | number : '1.2-2' }}</span>\n        </td>\n        <td>\n          <span *ngIf=\"e.amountType === AmountType.Credit\">{{ e.amount | number : '1.2-2' }}</span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { AmountType, CategoryType } from 'src/app/enums/expense.enum';\nimport { ExpenseListModel, ExpenseModel } from 'src/app/models/expense.model';\n\n@Component({\n    selector: 'app-expense-list',\n    templateUrl: './expense-list.component.html',\n    styleUrls: ['./expense-list.component.scss'],\n})\nexport class ExpenseListComponent implements OnInit {\n    expensesList: Array<ExpenseModel> = new Array<ExpenseModel>();\n\n    @ViewChild(DataTableDirective, { static: false })\n    dtElement!: DataTableDirective;\n    dtOptions: DataTables.Settings = {};\n    dtTrigger: Subject<any> = new Subject<any>();\n\n    CategoryType = CategoryType;\n    AmountType = AmountType;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.dtOptions = {\n            lengthChange: false,\n            ordering: true,\n            searching: false,\n            responsive: true,\n            paging: false,\n        };\n\n        this.getExpensesList();\n    }\n\n    getExpensesList() {\n        const userDataJSONString = localStorage.getItem('userData');\n        if (userDataJSONString) {\n            const userDataJSONObject = JSON.parse(userDataJSONString);\n            const userData = userDataJSONObject as ExpenseListModel;\n            this.expensesList = userData.expenseList;\n\n            setTimeout(() => {\n                this.dtTrigger.next(0);\n            });\n        } else {\n            const userData: ExpenseListModel = {\n                uniqueDeviceId: '',\n                expenseList: [],\n            };\n\n            const updatedUserDataJSONString = JSON.stringify(userData);\n            localStorage.setItem('userData', updatedUserDataJSONString);\n        }\n    }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nlet CURRENCY_MASK_CONFIG = new InjectionToken(\"currency.mask.config\");\n\nclass InputManager {\n    constructor(htmlInputElement) {\n        this.htmlInputElement = htmlInputElement;\n    }\n    setCursorAt(position) {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        }\n        else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n    updateValueAndCursor(newRawValue, oldLength, selectionStart) {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n    get canInputMoreNumbers() {\n        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = selectionStart != selectionEnd && this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/\\d/) ? true : false;\n        let startWithZero = this.htmlInputElement.value.substring(0, 1) == \"0\";\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n    get inputSelection() {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        }\n        else {\n            let range = document.getSelection().anchorNode;\n            if (range && range.firstChild == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                }\n                else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    }\n                    else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd,\n        };\n    }\n    get rawValue() {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n    set rawValue(value) {\n        this._storedRawValue = value;\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n    get storedRawValue() {\n        return this._storedRawValue;\n    }\n}\n\nclass InputService {\n    constructor(htmlInputElement, options) {\n        this.htmlInputElement = htmlInputElement;\n        this.options = options;\n        this.inputManager = new InputManager(htmlInputElement);\n    }\n    addNumber(keyCode) {\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, \"0\");\n        }\n        let keyChar = String.fromCharCode(keyCode);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart + 1);\n    }\n    applyMask(isNumber, rawValue) {\n        let { allowNegative, decimal, precision, prefix, suffix, thousands } = this.options;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(/[^0-9]/g, \"\");\n        if (!onlyNumbers) {\n            return \"\";\n        }\n        let integerPart = onlyNumbers\n            .slice(0, onlyNumbers.length - precision)\n            .replace(/^0*/g, \"\")\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands);\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        if (precision > 0) {\n            decimalPart = \"0\".repeat(precision - decimalPart.length) + decimalPart;\n            newRawValue += decimal + decimalPart;\n        }\n        let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\n        let operator = rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n    clearMask(rawValue) {\n        if (rawValue == null || rawValue == \"\") {\n            return null;\n        }\n        let value = rawValue.replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n        return parseFloat(value);\n    }\n    changeToNegative() {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            let selectionStart = this.inputSelection.selectionStart;\n            this.rawValue = \"-\" + this.rawValue;\n            this.updateFieldValue(selectionStart + 1);\n        }\n    }\n    changeToPositive() {\n        let selectionStart = this.inputSelection.selectionStart;\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\n        this.updateFieldValue(selectionStart - 1);\n    }\n    fixCursorPosition(forceToEndPosition) {\n        let currentCursorPosition = this.inputSelection.selectionStart;\n        //if the current cursor position is after the number end position, it is moved to the end of the number, ignoring the prefix or suffix. this behavior can be forced with forceToEndPosition flag\n        if (currentCursorPosition > this.getRawValueWithoutSuffixEndPosition() || forceToEndPosition) {\n            this.inputManager.setCursorAt(this.getRawValueWithoutSuffixEndPosition());\n            //if the current cursor position is before the number start position, it is moved to the start of the number, ignoring the prefix or suffix\n        }\n        else if (currentCursorPosition < this.getRawValueWithoutPrefixStartPosition()) {\n            this.inputManager.setCursorAt(this.getRawValueWithoutPrefixStartPosition());\n        }\n    }\n    getRawValueWithoutSuffixEndPosition() {\n        return this.rawValue.length - this.options.suffix.length;\n    }\n    getRawValueWithoutPrefixStartPosition() {\n        return this.value != null && this.value < 0 ? this.options.prefix.length + 1 : this.options.prefix.length;\n    }\n    removeNumber(keyCode) {\n        let { decimal, thousands } = this.options;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\n            selectionStart = this.rawValue.length - this.options.suffix.length;\n        }\n        //there is no selection\n        if (selectionEnd == selectionStart) {\n            //delete key and the target digit is a number\n            if ((keyCode == 46 || keyCode == 63272) && /^\\d+$/.test(this.rawValue.substring(selectionStart, selectionEnd + 1))) {\n                selectionEnd = selectionEnd + 1;\n            }\n            //delete key and the target digit is the decimal or thousands divider\n            if ((keyCode == 46 || keyCode == 63272) &&\n                (this.rawValue.substring(selectionStart, selectionEnd + 1) == decimal || this.rawValue.substring(selectionStart, selectionEnd + 1) == thousands)) {\n                selectionEnd = selectionEnd + 2;\n                selectionStart = selectionStart + 1;\n            }\n            //backspace key and the target digit is a number\n            if (keyCode == 8 && /^\\d+$/.test(this.rawValue.substring(selectionStart - 1, selectionEnd))) {\n                selectionStart = selectionStart - 1;\n            }\n            //backspace key and the target digit is the decimal or thousands divider\n            if (keyCode == 8 &&\n                (this.rawValue.substring(selectionStart - 1, selectionEnd) == decimal || this.rawValue.substring(selectionStart - 1, selectionEnd) == thousands)) {\n                selectionStart = selectionStart - 2;\n                selectionEnd = selectionEnd - 1;\n            }\n        }\n        this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart);\n    }\n    updateFieldValue(selectionStart) {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\");\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n    updateOptions(options) {\n        let value = this.value;\n        this.options = options;\n        this.value = value;\n    }\n    get canInputMoreNumbers() {\n        return this.inputManager.canInputMoreNumbers;\n    }\n    get inputSelection() {\n        return this.inputManager.inputSelection;\n    }\n    get rawValue() {\n        return this.inputManager.rawValue;\n    }\n    set rawValue(value) {\n        this.inputManager.rawValue = value;\n    }\n    get storedRawValue() {\n        return this.inputManager.storedRawValue;\n    }\n    get value() {\n        return this.clearMask(this.rawValue);\n    }\n    set value(value) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n}\n\nclass InputHandler {\n    constructor(htmlInputElement, options) {\n        this.inputService = new InputService(htmlInputElement, options);\n        this.htmlInputElement = htmlInputElement;\n    }\n    handleClick(event, chromeAndroid) {\n        let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n        //if there is no selection and the value is not null, the cursor position will be fixed. if the browser is chrome on android, the cursor will go to the end of the number.\n        if (selectionRangeLength == 0 && !isNaN(this.inputService.value)) {\n            this.inputService.fixCursorPosition(chromeAndroid);\n        }\n    }\n    handleCut(event) {\n        if (this.isReadOnly()) {\n            return;\n        }\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n    handleInput(event) {\n        if (this.isReadOnly()) {\n            return;\n        }\n        let keyCode = this.getNewKeyCode(this.inputService.storedRawValue, this.inputService.rawValue);\n        let rawValueLength = this.inputService.rawValue.length;\n        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\n        let rawValueWithoutSuffixEndPosition = this.inputService.getRawValueWithoutSuffixEndPosition();\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n        this.inputService.rawValue = this.inputService.storedRawValue;\n        if ((rawValueSelectionEnd != rawValueWithoutSuffixEndPosition || Math.abs(rawValueLength - storedRawValueLength) != 1) && storedRawValueLength != 0) {\n            this.setCursorPosition(event);\n            return;\n        }\n        if (rawValueLength < storedRawValueLength) {\n            if (this.inputService.value != 0) {\n                this.inputService.removeNumber(8);\n            }\n            else {\n                this.setValue(null);\n            }\n        }\n        if (rawValueLength > storedRawValueLength) {\n            switch (keyCode) {\n                case 43:\n                    this.inputService.changeToPositive();\n                    break;\n                case 45:\n                    this.inputService.changeToNegative();\n                    break;\n                default:\n                    if (!this.inputService.canInputMoreNumbers || (isNaN(this.inputService.value) && String.fromCharCode(keyCode).match(/\\d/) == null)) {\n                        return;\n                    }\n                    this.inputService.addNumber(keyCode);\n            }\n        }\n        this.setCursorPosition(event);\n        this.onModelChange(this.inputService.value);\n    }\n    handleKeydown(event) {\n        if (this.isReadOnly()) {\n            return;\n        }\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n            if (selectionRangeLength == this.inputService.rawValue.length || this.inputService.value == 0) {\n                this.setValue(null);\n                this.onModelChange(this.inputService.value);\n            }\n            if (selectionRangeLength == 0 && !isNaN(this.inputService.value)) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n            if ((keyCode === 8 || keyCode === 46) && selectionRangeLength != 0 && !isNaN(this.inputService.value)) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n    handleKeypress(event) {\n        if (this.isReadOnly()) {\n            return;\n        }\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == undefined || [9, 13].indexOf(keyCode) != -1 || this.isArrowEndHomeKeyInFirefox(event)) {\n            return;\n        }\n        switch (keyCode) {\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers && (!isNaN(this.inputService.value) || String.fromCharCode(keyCode).match(/\\d/) != null)) {\n                    this.inputService.addNumber(keyCode);\n                }\n        }\n        event.preventDefault();\n        this.onModelChange(this.inputService.value);\n    }\n    handleKeyup(event) {\n        this.inputService.fixCursorPosition();\n    }\n    handlePaste(event) {\n        if (this.isReadOnly()) {\n            return;\n        }\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n    updateOptions(options) {\n        this.inputService.updateOptions(options);\n    }\n    getOnModelChange() {\n        return this.onModelChange;\n    }\n    setOnModelChange(callbackFunction) {\n        this.onModelChange = callbackFunction;\n    }\n    getOnModelTouched() {\n        return this.onModelTouched;\n    }\n    setOnModelTouched(callbackFunction) {\n        this.onModelTouched = callbackFunction;\n    }\n    setValue(value) {\n        this.inputService.value = value;\n    }\n    getNewKeyCode(oldString, newString) {\n        if (oldString.length > newString.length) {\n            return null;\n        }\n        for (let x = 0; x < newString.length; x++) {\n            if (oldString.length == x || oldString[x] != newString[x]) {\n                return newString.charCodeAt(x);\n            }\n        }\n        return null;\n    }\n    isArrowEndHomeKeyInFirefox(event) {\n        if ([35, 36, 37, 38, 39, 40].indexOf(event.keyCode) != -1 && (event.charCode == undefined || event.charCode == 0)) {\n            return true;\n        }\n        return false;\n    }\n    isReadOnly() {\n        return this.htmlInputElement && this.htmlInputElement.readOnly;\n    }\n    setCursorPosition(event) {\n        let rawValueWithoutSuffixEndPosition = this.inputService.getRawValueWithoutSuffixEndPosition();\n        // For some reason, in Android, the event got override before the timeout and change the target.\n        const inputElement = event.target;\n        setTimeout(function () {\n            inputElement.setSelectionRange(rawValueWithoutSuffixEndPosition, rawValueWithoutSuffixEndPosition);\n        }, 0);\n    }\n}\n\nconst CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CurrencyMaskDirective),\n    multi: true,\n};\nclass CurrencyMaskDirective {\n    constructor(currencyMaskConfig, elementRef, keyValueDiffers) {\n        this.currencyMaskConfig = currencyMaskConfig;\n        this.elementRef = elementRef;\n        this.keyValueDiffers = keyValueDiffers;\n        this.options = {};\n        this.optionsTemplate = {\n            align: \"right\",\n            allowNegative: true,\n            decimal: \".\",\n            precision: 2,\n            prefix: \"$ \",\n            suffix: \"\",\n            thousands: \",\",\n        };\n        if (currencyMaskConfig) {\n            this.optionsTemplate = currencyMaskConfig;\n        }\n        this.keyValueDiffer = keyValueDiffers.find({}).create();\n    }\n    ngAfterViewInit() {\n        this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n    }\n    ngDoCheck() {\n        if (this.keyValueDiffer.diff(this.options)) {\n            this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n            this.inputHandler.updateOptions(Object.assign({}, this.optionsTemplate, this.options));\n        }\n    }\n    ngOnInit() {\n        this.inputHandler = new InputHandler(this.elementRef.nativeElement, Object.assign({}, this.optionsTemplate, this.options));\n    }\n    handleBlur(event) {\n        this.inputHandler.getOnModelTouched().apply(event);\n    }\n    handleClick(event) {\n        this.inputHandler.handleClick(event, this.isChromeAndroid());\n    }\n    handleCut(event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleCut(event);\n        }\n    }\n    handleInput(event) {\n        if (this.isChromeAndroid()) {\n            this.inputHandler.handleInput(event);\n        }\n    }\n    handleKeydown(event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeydown(event);\n        }\n    }\n    handleKeypress(event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeypress(event);\n        }\n    }\n    handleKeyup(event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeyup(event);\n        }\n    }\n    handlePaste(event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handlePaste(event);\n        }\n    }\n    isChromeAndroid() {\n        return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n    }\n    registerOnChange(callbackFunction) {\n        this.inputHandler.setOnModelChange(callbackFunction);\n    }\n    registerOnTouched(callbackFunction) {\n        this.inputHandler.setOnModelTouched(callbackFunction);\n    }\n    setDisabledState(value) {\n        this.elementRef.nativeElement.disabled = value;\n    }\n    validate(abstractControl) {\n        let result = {};\n        if (abstractControl.value > this.max) {\n            result.max = true;\n        }\n        if (abstractControl.value < this.min) {\n            result.min = true;\n        }\n        return result != {} ? result : null;\n    }\n    writeValue(value) {\n        this.inputHandler.setValue(value);\n    }\n}\nCurrencyMaskDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskDirective, deps: [{ token: CURRENCY_MASK_CONFIG, optional: true }, { token: i0.ElementRef }, { token: i0.KeyValueDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nCurrencyMaskDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: CurrencyMaskDirective, selector: \"[currencyMask]\", inputs: { max: \"max\", min: \"min\", options: \"options\" }, host: { listeners: { \"blur\": \"handleBlur($event)\", \"click\": \"handleClick($event)\", \"cut\": \"handleCut($event)\", \"input\": \"handleInput($event)\", \"keydown\": \"handleKeydown($event)\", \"keypress\": \"handleKeypress($event)\", \"keyup\": \"handleKeyup($event)\", \"paste\": \"handlePaste($event)\" } }, providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR, { provide: NG_VALIDATORS, useExisting: CurrencyMaskDirective, multi: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[currencyMask]\",\n                    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR, { provide: NG_VALIDATORS, useExisting: CurrencyMaskDirective, multi: true }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CURRENCY_MASK_CONFIG]\n                }] }, { type: i0.ElementRef }, { type: i0.KeyValueDiffers }]; }, propDecorators: { max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], handleBlur: [{\n                type: HostListener,\n                args: [\"blur\", [\"$event\"]]\n            }], handleClick: [{\n                type: HostListener,\n                args: [\"click\", [\"$event\"]]\n            }], handleCut: [{\n                type: HostListener,\n                args: [\"cut\", [\"$event\"]]\n            }], handleInput: [{\n                type: HostListener,\n                args: [\"input\", [\"$event\"]]\n            }], handleKeydown: [{\n                type: HostListener,\n                args: [\"keydown\", [\"$event\"]]\n            }], handleKeypress: [{\n                type: HostListener,\n                args: [\"keypress\", [\"$event\"]]\n            }], handleKeyup: [{\n                type: HostListener,\n                args: [\"keyup\", [\"$event\"]]\n            }], handlePaste: [{\n                type: HostListener,\n                args: [\"paste\", [\"$event\"]]\n            }] } });\n\nclass CurrencyMaskModule {\n}\nCurrencyMaskModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCurrencyMaskModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskModule, declarations: [CurrencyMaskDirective], imports: [CommonModule, FormsModule], exports: [CurrencyMaskDirective] });\nCurrencyMaskModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskModule, imports: [[CommonModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CurrencyMaskModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule],\n                    declarations: [CurrencyMaskDirective],\n                    exports: [CurrencyMaskDirective],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng2-currency-mask\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR, CURRENCY_MASK_CONFIG, CurrencyMaskDirective, CurrencyMaskModule };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\nimport { ExpenseListComponent } from './expense-list/expense-list.component';\nimport { ExpenseDetailComponent } from './expense-detail/expense-detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExpenseListComponent,\n    },\n    {\n        path: 'list',\n        component: ExpenseListComponent,\n    },\n    {\n        path: 'detail',\n        component: ExpenseDetailComponent,\n    },\n    {\n        path: '',\n        redirectTo: '',\n        pathMatch: 'full',\n    },\n    {\n        path: '**',\n        redirectTo: '',\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule, FormsModule],\n})\nexport class ExpenseRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CurrencyMaskConfig } from 'ng2-currency-mask';\nimport { AmountType, CategoryType } from 'src/app/enums/expense.enum';\nimport { ExpenseListModel } from 'src/app/models/expense.model';\n\n@Component({\n    selector: 'app-expense-detail',\n    templateUrl: './expense-detail.component.html',\n    styleUrls: ['./expense-detail.component.scss'],\n})\nexport class ExpenseDetailComponent implements OnInit {\n    currencyConfig: CurrencyMaskConfig = {\n        align: 'right',\n        allowNegative: false,\n        decimal: '.',\n        precision: 2,\n        prefix: '',\n        suffix: '',\n        thousands: ',',\n    };\n\n    CategoryType = CategoryType;\n    AmountType = AmountType;\n    expenseForm!: FormGroup;\n\n    constructor(private formBuilder: FormBuilder, private router: Router) {}\n\n    ngOnInit(): void {\n        this.expenseForm = this.formBuilder.group({\n            title: [null, [Validators.required, Validators.maxLength(100)]],\n            category: [null, Validators.required],\n            remark: null,\n            amount: [\n                null,\n                [\n                    Validators.required,\n                    Validators.min(0.01),\n                    Validators.max(999999.99),\n                ],\n            ],\n            createdDateTime: null,\n            amountType: [AmountType.Credit, [Validators.required]],\n        });\n    }\n\n    onSubmit() {\n        this.expenseForm.markAllAsTouched();\n\n        if (this.expenseForm.valid) {\n            const userDataJSONString = localStorage.getItem('userData');\n            if (userDataJSONString) {\n                const userDataJSONObject = JSON.parse(userDataJSONString);\n                const userData = userDataJSONObject as ExpenseListModel;\n                userData.expenseList.push(this.expenseForm.value);\n\n                const updatedUserDataJSONString = JSON.stringify(userData);\n                localStorage.setItem('userData', updatedUserDataJSONString);\n\n                this.router.navigate(['expenses']);\n            } else {\n                const userData: ExpenseListModel = {\n                    uniqueDeviceId: '',\n                    expenseList: [],\n                };\n                userData.expenseList.push(this.expenseForm.value);\n\n                const updatedUserDataJSONString = JSON.stringify(userData);\n                localStorage.setItem('userData', updatedUserDataJSONString);\n            }\n        }\n    }\n}\n","<div class=\"container\">\n\n  <form [formGroup]=\"expenseForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field appearance=\"fill\" class=\"w-100\">\n          <mat-label>Title</mat-label>\n          <input matInput formControlName=\"title\">\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <mat-form-field appearance=\"fill\" floatLabel=\"always\" class=\"w-100\">\n          <mat-label>Amount</mat-label>\n          <input matInput class=\"example-right-align\" placeholder=\"0.00\" currencyMask [options]=\"currencyConfig\"\n            formControlName=\"amount\">\n          <span matPrefix>RM &nbsp;</span>\n        </mat-form-field>\n      </div>\n      <div class=\"col-md-6\">\n        <mat-form-field appearance=\"fill\" class=\"w-100\">\n          <mat-label>Category</mat-label>\n          <mat-select formControlName=\"category\">\n            <mat-option [value]=\"CategoryType.Others\">Others</mat-option>\n            <mat-option [value]=\"CategoryType.Loan\">Loan</mat-option>\n            <mat-option [value]=\"CategoryType.Bill\">Bill</mat-option>\n            <mat-option [value]=\"CategoryType.Shopping\">Shopping</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-radio-group aria-label=\"Select an option\" formControlName=\"amountType\">\n          <mat-radio-button [value]=\"AmountType.Credit\" name=\"radio-amount-type\" class=\"me-2\">\n            Credit\n          </mat-radio-button>\n          <mat-radio-button [value]=\"AmountType.Debit\" name=\"radio-amount-type\">\n            Debit\n          </mat-radio-button>\n        </mat-radio-group><br><br>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field appearance=\"fill\" class=\"w-100\">\n          <mat-label>Remark</mat-label>\n          <textarea matInput rows=\"5\" formControlName=\"remark\"></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <button mat-raised-button color=\"primary\" class=\"me-2\" type=\"submit\">Submit</button>\n    <button mat-raised-button color=\"basic\" [routerLink]=\"['expenses']\">Back</button>\n  </form>\n\n</div>\n\n<pre>\n  {{expenseForm.value|json}}\n</pre>","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { MaterialModule } from './material.module';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MaterialModule,\r\n        CurrencyMaskModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n})\r\nexport class SharedModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExpenseListComponent } from './expense-list/expense-list.component';\nimport { ExpenseDetailComponent } from './expense-detail/expense-detail.component';\nimport { ExpenseRoutingModule } from './expense-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { SharedModule } from 'src/app/modules/shared.module';\n\n@NgModule({\n    declarations: [ExpenseListComponent, ExpenseDetailComponent],\n    imports: [\n        CommonModule,\n        ExpenseRoutingModule,\n        DataTablesModule,\n        SharedModule,\n    ],\n})\nexport class ExpenseModule {}\n"],"x_google_ignoreList":[0,1,5]}